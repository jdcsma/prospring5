<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- same as @EnableTransactionManagement -->
    <tx:annotation-driven/>
    <!--
        The <context:component-scan/> tag implies the effects of the '<context:annotation-config/>' tag.
    -->
    <context:component-scan base-package="jun.prospring5.ch8"/>

    <bean id="dataSource"
          class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close"
          p:driverClassName="#{jdbc.databaseDriverClassName}"
          p:url="#{jdbc.databaseUrl}"
          p:username="#{jdbc.databaseUsername}"
          p:password="#{jdbc.databasePassword}"
          p:filters="#{jdbc.druid_filters}"
          p:initialSize="#{jdbc.druid_initialSize}"
          p:maxActive="#{jdbc.druid_maxActive}"
          p:maxWait="#{jdbc.druid_maxWait}"
          p:minIdle="#{jdbc.druid_minIdle}"
          p:timeBetweenEvictionRunsMillis="#{jdbc.druid_timeBetweenEvictionRunsMillis}"
          p:minEvictableIdleTimeMillis="#{jdbc.druid_minEvictableIdleTimeMillis}"
          p:validationQuery="#{jdbc.druid_validationQuery}"
          p:testWhileIdle="#{jdbc.druid_testWhileIdle}"
          p:testOnBorrow="#{jdbc.druid_testOnBorrow}"
          p:testOnReturn="#{jdbc.druid_testOnReturn}"
          p:poolPreparedStatements="#{jdbc.druid_poolPreparedStatements}"
          p:maxPoolPreparedStatementPerConnectionSize="#{jdbc.druid_maxPoolPreparedStatementPerConnectionSize}"/>

    <bean id="jpaVendorAdapter"
          class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
        <property name="packagesToScan" value="jun.prospring5.ch8.entity"/>
        <property name="jpaProperties" ref="hibernateProperties"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager"
          p:entityManagerFactory-ref="entityManagerFactory"/>

    <util:properties id="hibernateProperties">
        <prop key="hibernate.dialect">#{jdbc.hibernate_dialect}</prop>
        <prop key="hibernate.show_sql">#{jdbc.hibernate_show_sql}</prop>
        <prop key="hibernate.format_sql">#{jdbc.hibernate_format_sql}</prop>
        <prop key="hibernate.use_sql_comments">#{jdbc.hibernate_use_sql_comments}</prop>
        <prop key="hibernate.max_fetch_depth">#{jdbc.hibernate_max_fetch_depth}</prop>
        <prop key="hibernate.hbm2ddl.auto">#{jdbc.hibernate_hbm2ddl_auto}</prop>
    </util:properties>

    <util:properties id="jdbc" location="classpath:jdbc.properties"/>
</beans>